@page "/Login"
@using WebApp.Shared.Dto
@using WebApp.Client.Services
@inject NavigationManager NavigationManager
@inject UserService UserService
<PageTitle>Le Epic Lonig Paeg</PageTitle>

<head>
<style>
.center {
  margin: auto;
  width: 30%;
}
img {
  display: block;
  margin-left: auto;
  margin-right: auto;
}
</style>
</head>
<body>
<div class="center">
    
    <img src="/Res/krater.png" id="logo" alt="Gąsienica paląca papierosa" width="200px" height="267px">
    
    <EditForm Model="@loginDto" OnValidSubmit="@LoginUser">
        <DataAnnotationsValidator />
    
        <div class="form-group">
            <InputText @bind-Value="loginDto.Email" class="form-control" placeholder="Email" />
            <ValidationMessage For="@(() => loginDto.Email)" />
        </div>
    
        <div class="form-group">
            <InputText @bind-Value="loginDto.Password" type="password" class="form-control" placeholder="Hasło" />
            <ValidationMessage For="@(() => loginDto.Password)" />
        </div>
        <br />
         <p class="formbuttons"><button type="submit" id="submit" class="button mainaction submit btn btn-primary btn-lg text-uppercase w-100">Zaloguj</button>
        </p>
        <br />
    </EditForm>
    <br />

        @if (!string.IsNullOrEmpty(Error))
    {
        <div class="alert alert-danger" role="alert">
            @Error
        </div>
    }
    
</div>
</body>



@code {
    private LoginDto loginDto = new();
    private string Error = "";

    private async Task LoginUser()
    {
        var result = await UserService.Login(loginDto);
        if (result.Successful)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            Error = result.Error;
            // tutaj powinien być jakiś system do pokazywania komunikatów
        }
    }

}