@page "/"
@using WebApp.Shared.Dto
@using Newtonsoft.Json
@using WebApp.Client.Components
@using WebApp.Client.Services
@using System.Diagnostics
@inject HttpClient HttpClient
@inject ProjectService ProjectService

<PageTitle>Home</PageTitle>

<style>
.center {
  margin: auto;
}
img {
  display: block;
  margin-left: auto;
  margin-right: auto;
}
table, th, td {
  border:1px solid black;
}
</style>
@if (logged)
{
    
    <style>
        body { background: white !important; }
                table, th, td {
                  border:2px solid black;
                }
    </style>
    <div style="text-align: center;">
        <h1>Projekty</h1>
        @if (admin)
        {
            <button type="submit" id="submit" class="button mainaction submit btn btn-primary btn-lg text-uppercase w-30" @onclick="() => ModalDialog.Open()">Kliknij, aby dodać nowy projekt</button>
            
            <ModalDialog @ref="ModalDialog" Title="Dodawanie Projektu">
                <div class="row">
                    <EditForm Model="@proj">
                        <DataAnnotationsValidator />
                        
                        <div class="form-group">
                            <InputText @bind-Value="proj.ProjectName" class="form-control" placeholder="Nazwa Projektu" />
                            <ValidationMessage For="@(() => proj.ProjectName)" />
                        </div>
                        
                        <div class="form-group">
                            <InputText @bind-Value="proj.Description" class="form-control" placeholder="Opis" />
                            <ValidationMessage For="@(() => proj.Description)" />
                        </div>
                        <div >
                            <InputDate Type="InputDateType.DateTimeLocal" @bind-Value="proj.DeadlineDateTime" class="form-control" />
                            <ValidationMessage For="@(() => proj.DeadlineDateTime)" />
                        </div>                            
                        <br />
                        <p class="formbuttons"><button type="submit" id="submit" class="button mainaction submit btn btn-primary btn-lg w-40"
                                                       @onclick="Send">Dodaj</button><button class="button mainaction btn btn-secondary btn-lg w-40"  @onclick="() => ModalDialog.Close()">Zamknij</button></p>
                        <br />
                    </EditForm>
                </div>
            </ModalDialog>
            
            <ModalDialog @ref="EditDialog" Title="Edycja Projektu">
                <div class="row">
                    <EditForm Model="@proj">
                        <DataAnnotationsValidator />
                        
                        <div class="form-group">
                            <InputText @bind-Value="proj.ProjectName" class="form-control" placeholder="Nazwa Projektu" />
                            <ValidationMessage For="@(() => proj.ProjectName)" />
                        </div>
                        
                        <div class="form-group">
                            <InputText @bind-Value="proj.Description" class="form-control" placeholder="Opis" />
                            <ValidationMessage For="@(() => proj.Description)" />
                        </div>
                        <div >
                            <InputDate Type="InputDateType.DateTimeLocal" @bind-Value="proj.DeadlineDateTime" class="form-control" />
                            <ValidationMessage For="@(() => proj.DeadlineDateTime)" />
                        </div>                            
                        <br />
                        <p class="formbuttons"><button type="submit" id="submit" class="button mainaction submit btn btn-primary btn-lg w-40"
                                                       @onclick="EditDialog.Close">Zatwierdź zmiany</button><button class="button mainaction btn btn-secondary btn-lg w-40"  @onclick="() => EditDialog.Close()">Zamknij</button></p>
                        <br />
                    </EditForm>
                </div>
            </ModalDialog>
            
        }
    </div>
    <br/>
    <table style="width:100%">
        <tr>
            <th style="text-align: center;">Nazwa Projektu</th>
            <th style="text-align: center;">Opis Projektu</th>
            <th style="text-align: center;">Data Utworzenia</th>
            <th style="text-align: center;">Data Zwrotu</th>
        </tr>
            @foreach (var project in projects)
                    {
                        <tr>
                        <td>@project.ProjectName</td><td>@project.Description</td><td>@project.CreationDateTime</td><td>@project.DeadlineDateTime</td>
                        @if (admin)
                        {
                            <td> <button class="button btn btn-primary btn-lg w-100" @onclick="() => EditDialog.Open()">Zarządzaj</button> </td>
                        }
                        </tr>
                    }
    </table>
    
    
}
else
{
    <style>
        body { background: red !important; }
    </style>
    <div class="center">
        <img src="/Res/sotp.png" id="sotp" width="90%" height="90%">
    </div>
}

@code{

    public static bool logged = true;
    public static bool admin = true;



@code {
    private ModalDialog ModalDialog { get; set; }
    private ModalDialog EditDialog { get; set; }
}
    public string data = "";
    ProjectDto proj = new ProjectDto();
    public List<ProjectDto> projects;

    protected override async Task OnInitializedAsync()
    {
        projects = await ProjectService.GetProjectsAsync();
    }

    async Task Send()
    {
        if (proj.ProjectName != "" && proj.DeadlineDateTime != null)
        {
            await ProjectService.AddProject(proj);
            ModalDialog.Close();
            Console.WriteLine(proj.DeadlineDateTime);
        }
        if (proj.ProjectName == "")
        {
            throw new Exception("Projekt musi mieć nazwę.");
        }
            
    }
    
}